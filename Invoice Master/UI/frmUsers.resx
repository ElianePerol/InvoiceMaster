<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxClose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>