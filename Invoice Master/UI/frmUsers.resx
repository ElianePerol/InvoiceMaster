<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxClose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>